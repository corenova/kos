module kinetic-console {
  prefix console;

  import kinetic-object-stream {
    prefix kos;
  }
  import kinetic-render {
    prefix render;
  }

  feature colors {
    reference "npm://colors";
  }
  feature readline {
    reference "nodejs://readline";
  }
  
  grouping io {
    container input;
    container output;
    container source;
  }
  grouping prompt {
    
  }
  grouping line {
    leaf data {
      type string;
    }
  }
  kos:reaction initialize {
    input {
      kos:flow kos:process;
      kos:flow kos:program;
    }
    output {
      kos:flow console:io;
    }
  }
  kos:reaction createConsole {
    if-feature console:readline;
    if-feature console:colors;
    input {
      kos:flow kos:process {
        require-instance true;
      }
      kos:flow console:io;
    }
    output {
      kos:flow console:prompt;
      kos:flow console:line;
    }
  }
  kos:reaction processInput {
    input {
      kos:flow kos:process {
        require-instance true;
      }
      kos:flow console:io;
      kos:flow console:prompt;
    }
    output {
      kos:flow render:info;
    }
  }
  kos:reaction renderReactor {
    input {
      kos:flow kos:process {
        require-instance true;
      }
      kos:flow kos:program {
        require-instance true;
      }
      //kos:flow kos:reactor;
    }
    output {
      kos:flow render:info;
    }
  }
}
