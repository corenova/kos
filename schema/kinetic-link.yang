module kinetic-link {
  prefix link;

  import kinetic-object-stream {
    prefix kos;
  }
  import kinetic-network {
    prefix net;
  }
  import kinetic-websocket {
    prefix ws;
  }
  feature parse {
    if-feature kos:json;
  }
  feature stringify {
    if-feature kos:json;
  }
  /*
   * Groupings
   */
  grouping remote {
    uses net:remote;
  }
  grouping local {
    uses net:local;
  }
  grouping peer {
    
  }
  /*
   * Kinetic Reactions
   */
  kos:reaction connect {
    input {
      kos:data link:remote;
    }
    output {
      kos:data net:remote;
      kos:data ws:remote;
    }
  }
  kos:reaction listen {
    input {
      kos:data link:local;
    }
    output {
      kos:data net:local;
      kos:data ws:local;
    }
  }
  kos:reaction sync {
    if-feature kos:channel;
    //if-feature kos:interface;
    input {
      kos:data net:connection;
    }
    output {
      kos:data link:peer;
    }
  }
}
