module kinetic-link {
  prefix link;

  import kinetic-object-stream {
    prefix kos;
  }
  import kinetic-network {
    prefix net;
  }
  import kinetic-websocket {
    prefix ws;
  }
  feature parse {
    if-feature kos:json;
  }
  feature stringify {
    if-feature kos:json;
  }
  /*
   * Groupings
   */
  grouping endpoint {
    uses net:endpoint;
  }
  grouping peer {
    
  }
  /*
   * Kinetic Personas
   */
  kos:persona Connector {
    kos:extends net:Connector;
    kos:extends ws:Connector;
    kos:extends link:Synchronizer;
  }
  kos:persona Listener {
    kos:extends net:Listener;
    kos:extends ws:Listener;
    kos:extends link:Synchronizer;
  }
  kos:persona Synchronizer {
    kos:reaction select {
      input {
        kos:data link:endpoint;
      }
      output {
        kos:data net:endpoint;
        kos:data ws:endpoint;
      }
    }
    kos:reaction sync {
      if-feature kos:channel;
      //if-feature kos:interface;
      input {
        kos:data net:connection;
      }
      output {
        kos:data link:peer;
      }
    }
  }
}
