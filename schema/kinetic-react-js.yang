module kinetic-react-js {
  namespace "urn:ietf:params:xml:ns:yang:kinetic-react-js";
  prefix react;

  organization
    "Corenova Technologies, Inc.";
  contact
    "Peter K. Lee <peter@corenova.com>";
  description
    "A module that encapsulates React.js related data models and provides
     KOS generators for working with React Components.";
  
  import kinetic-object-stream {
    prefix kos;
  }
  /*
   * Features
   */
  feature dom {
    reference "npm://react-dom";
  }
  feature router {
    reference "npm://react-router";
  }
  extension component {
    
  }
  /*
   * Groupings
   */
  grouping component {
    container state;
    // action setState;
    // action componentWillMount;
    // action componentDidMount;
    // action componentWillUnmount;
    // action componentDidUpdate;
    // action componentWillReceiveProps;
  }
  grouping setter;
  grouping mounting;
  grouping mounted;
  grouping unmounting;
  grouping updating;
  grouping updated;
  grouping receive;
  grouping props;
  grouping state;
  grouping event;
  grouping trigger {
    leaf topic {
      type kos:topic;
    }
    anydata data;
  }
  grouping form-clear;
  grouping route {
    container location {
      leaf pathname {
        type string;
      }
      leaf search {
        type string;
      }
      leaf hash {
        type string;
      }
      leaf key;
      anydata state;
    }
    leaf action {
      type enumeration {
        enum PUSH;
        enum REPLACE;
        enum POP;
      }
    }
  }

  kos:processor Component {
    description
      "A reactor that consumes React.Component instances and captures
       lifecycle events and state changes";
    /*
     * Kinetic Reactions
     */
    kos:reaction transform {
      input {
        kos:flow react:component;
      }
      output {
        kos:flow react:setter;
        kos:flow react:mounting;
        kos:flow react:mounted;
        kos:flow react:unmounting;
        kos:flow react:updating;
        kos:flow react:updated;
        kos:flow react:receive;
        kos:flow react:event;
        kos:flow react:trigger;
        kos:flow react:props;
        kos:flow react:state;
      }
    }
    kos:reaction mount {
      input {
        kos:flow react:mounting;
      }
    }
    kos:reaction unmount {
      input {
        kos:flow react:unmounting;
      }
      output {
        kos:flow react:mounted;
      }
    }
    kos:reaction history {
      //if-feature react:router;
      input {
        kos:flow react:props;
      }
      output {
        kos:flow react:route;
      }
    }
    kos:reaction applyState {
      input {
        kos:flow react:state;
        kos:flow react:setter {
          require-instance true;
        }
        kos:flow react:mounted {
          require-instance true;
        }
      }
    }
  }
  kos:processor Form {
    kos:extends react:Component;

    description
      "A generator that extends React.Component instances and handles form
       related activity (i.e. onClick, onChange) and automates state
       updates related to form data.";
    
    kos:reaction saveFormData {
      input {
        kos:flow react:event;
      }
      output {
        kos:flow react:state; // FUTURE
      }
    }
    kos:reaction clearForm {
      if-feature react:dom;
      input {
        kos:flow react:component {
          require-instance true;
        }
        kos:flow react:form-clear;
      }
    }
  }
}
